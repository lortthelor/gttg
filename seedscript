-- AutoFarmGrid.lua
-- Metti in StarterPlayer → StarterPlayerScripts

local Players    = game:GetService("Players")
local RunService = game:GetService("RunService")
local RepStorage = game:GetService("ReplicatedStorage")

local player     = Players.LocalPlayer
local rootPart

-- RemoteEvent per piantare
local PlantEvent = RepStorage
  :WaitForChild("Events")
  :WaitForChild("Farming")
  :WaitForChild("Plant")

-- Cartella con i 16×7 “slot”
local farmFolder = workspace
  :WaitForChild("MinigameModels")
  :WaitForChild("Farming")
  :WaitForChild("Player")
  :WaitForChild("cubozzi")

-- Aggiorna rootPart ad ogni respawn
player.CharacterAdded:Connect(function(char)
    rootPart = char:WaitForChild("HumanoidRootPart")
end)
if player.Character then
    rootPart = player.Character:WaitForChild("HumanoidRootPart")
end

-- Trova ricorsivamente la ProximityPrompt in un modello
local function findPrompt(model)
    return model:FindFirstChildWhichIsA("ProximityPrompt", true)
end

-- Leggi i semi dalla GUI e ordina per rarità prima
local function getSeedData()
    local out = {}
    local farmGui = player.PlayerGui
      :WaitForChild("MainUi")
      :WaitForChild("InventoryFrame")
      :WaitForChild("Item")
      :WaitForChild("Farm")

    for _, seedItem in ipairs(farmGui:GetChildren()) do
        local frame = seedItem:FindFirstChild("Frame")
        if frame then
            local amtLbl = frame:FindFirstChild("Amount")
            if amtLbl and amtLbl:IsA("TextLabel") then
                local n = tonumber(amtLbl.Text:match("%d+")) or 0
                if n > 0 then
                    local name = seedItem.Name:gsub(" Seed","")
                    local rare = frame:FindFirstChild("RARE")~=nil
                    table.insert(out, { seedType = name, qty = n, isRare = rare })
                end
            end
        end
    end
    table.sort(out, function(a,b)
        if a.isRare ~= b.isRare then return a.isRare end
        return a.seedType < b.seedType
    end)
    return out
end

-- Ciclo principale
spawn(function()
    while true do
        if not rootPart then
            wait(0.5)
            continue
        end

        -- 1) HARVEST: cerco le piante mature solo nei miei slot
        local toHarvest = {}
        for _, slot in ipairs(farmFolder:GetChildren()) do
            local prompt = findPrompt(slot)
            if prompt then
                table.insert(toHarvest, { slot = slot, prompt = prompt })
            end
        end
        for _, info in ipairs(toHarvest) do
            -- teletrasporto 3 stud sopra
            local cf = (info.slot.GetPivot and info.slot:GetPivot()) or info.slot.PrimaryPart.CFrame
            rootPart.CFrame = cf * CFrame.new(0,3,0)
            RunService.Heartbeat:Wait()
            info.prompt:InputHoldBegin()
            task.wait(info.prompt.HoldDuration + 0.02)
            info.prompt:InputHoldEnd()
            task.wait(0.02)
        end

        -- 2) PLANT: grid 16×7 (Z=0→6, X=0→15)
        local seeds = getSeedData()
        for z = 0, 6 do
            for x = 0, 15 do
                local slotName = x.."_"..z
                local slot = farmFolder:FindFirstChild(slotName)
                if slot and slot:GetAttribute("HasPlant") == false then
                    for _, s in ipairs(seeds) do
                        if s.qty > 0 then
                            PlantEvent:FireServer(slot, s.seedType)
                            s.qty = s.qty - 1
                            task.wait(0.02)
                            break
                        end
                    end
                end
            end
        end

        task.wait(0.5)
    end
end)
